require "vnd.dovecot.testsuite";
require "vacation";
require "variables";
require "envelope";
require "body";

/*
 * Subject
 */

test_set "message" text:
From: stephan@example.org
Subject: No subject of discussion
To: nico@frop.example.org

Frop
.
;

test_result_reset;
test "Subject" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :is "subject" "Auto: No subject of discussion" {
		test_fail "Subject header is incorrect";
	}
}

/*
 * Subject - explicit
 */

test_set "message" text:
From: stephan@example.org
Subject: No subject of discussion
To: nico@frop.example.org

Frop
.
;

test_result_reset;
test "Subject - explicit" {
	vacation :subject "Tulips" "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :is "subject" "Tulips" {
		test_fail "Subject header is incorrect";
	}
}

/*
 * No subject
 */

test_set "message" text:
From: stephan@example.org
To: nico@frop.example.org

Frop
.
;

test_result_reset;
test "No subject" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not exists "subject" {
		test_fail "Subject header is missing";
	}
}

/*
 * Reply to
 */

test_set "message" text:
From: "Stephan Bosch" <stephan@example.org>
Subject: Reply to me
To: nico@frop.example.org

Frop
.
;

test_result_reset;
test "Reply to" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not address :is "to" "stephan@example.org" {
		test_fail "To header has incorrect address";
	}

	if not header :is "to" "\"Stephan Bosch\" <stephan@example.org>" {
		test_fail "To header is incorrect";
	}
}

/*
 * Reply to sender
 */

test_set "message" text:
From: "Stephan Bosch" <stephan@example.org>
Sender: "Hendrik-Jan Tuinman" <h.j.tuinman@example.org>
Subject: Reply to me
To: nico@frop.example.org

Frop
.
;

test_set "envelope.from" "h.j.tuinman@example.org";

test_result_reset;
test "Reply to sender" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not address :is "to" "h.j.tuinman@example.org" {
		test_fail "To header has incorrect address";
	}

	if not header :is "to" "\"Hendrik-Jan Tuinman\" <h.j.tuinman@example.org>" {
		test_fail "To header is incorrect";
	}
}

/*
 * Reply to unknown
 */

test_set "message" text:
From: "Stephan Bosch" <stephan@example.org>
Sender: "Hendrik-Jan Tuinman" <h.j.tuinman@example.org>
Subject: Reply to me
To: nico@frop.example.org

Frop
.
;

test_set "envelope.from" "arie.aardappel@example.org";

test_result_reset;
test "Reply to unknown" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not address :is "to" "arie.aardappel@example.org" {
		test_fail "To header has incorrect address";
	}

	if not header :is "to" "<arie.aardappel@example.org>" {
		test_fail "To header is incorrect";
	}
}

/*
 * Reply to (ignored envelope)
 */

test_set "message" text:
From: "Stephan Bosch" <stephan@example.org>
Sender: "Hendrik-Jan Tuinman" <h.j.tuinman@example.org>
Subject: Reply to me
To: nico@frop.example.org

Frop
.
;

test_set "envelope.from" "srs0=hmc8=v7=example.com=arie@example.org";

test_config_set "sieve_vacation_to_header_ignore_envelope" "yes";
test_config_reload :extension "vacation";

test_result_reset;
test "Reply to (ignored envelope)" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not address :is "to" "h.j.tuinman@example.org" {
		test_fail "To header has incorrect address";
	}

	if not header :is "to" "\"Hendrik-Jan Tuinman\" <h.j.tuinman@example.org>" {
		test_fail "To header is incorrect";
	}
}

/*
 * References
 */

test_set "message" text:
From: stephan@example.org
Subject: frop
References: <1234@local.machine.example> <3456@example.net>
 <435444@ttms.example.org> <4223@froop.example.net> <m345444444@message-id.exp>
Message-ID: <432df324@example.org>
To: nico@frop.example.org

Frop
.
;

test_result_reset;
test "References" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :contains "references" "432df324@example.org" {
		test_fail "references header does not contain new id";
	}

	if anyof (
		not header :contains "references" "1234@local.machine.example",
		not header :contains "references" "3456@example.net",
		not header :contains "references" "435444@ttms.example.org",
		not header :contains "references" "4223@froop.example.net",
		not header :contains "references" "m345444444@message-id.exp"
		) {
		test_fail "references header does not contain all existing ids";
	}

	if header :contains "references" "hutsefluts" {
		test_fail "references header contains nonsense";
	}
}

/*
 * References - long IDs
 */

test_result_reset;

test_set "message" text:
Date: Fri, 21 Jul 2013 10:34:14 +0200 (CEST)
From: Test <user1@dovetest.example.org>
To: User Two <user2@dovetest.example.org>
Message-ID: <1294794880.187.416268f9-b907-4566-af85-c77155eb7d96.farce@fresno.local>
In-Reply-To: <1813483923.1202.aa78bea5-b5bc-4ab9-a64f-af96521e3af3.frobnitzm@dev.frobnitzm.com>
References: <d660a7d1-43c9-47ea-a59a-0b29abc861d2@frop.xi.local>
 <500510465.1519.d2ac1c0c-08f7-44fd-97aa-dd711411aacf.frobnitzm@dev.frobnitzm.com>
 <717028309.1200.aa78bea5-b5bc-4ab9-a64f-af96521e3af3.frobnitzm@dev.frobnitzm.com>
 <1813483923.1202.aa78bea5-b5bc-4ab9-a64f-af96521e3af3.frobnitzm@dev.frobnitzm.com>
Subject: Re: Fwd: My mail
MIME-Version: 1.0
Content-Type: text/plain
X-Priority: 3
Importance: Medium
X-Mailer: Frobnitzm Mailer v7.8.0-Rev0

Frop
.
;

test "References - long IDs" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :contains "references" "1294794880.187.416268f9-b907-4566-af85-c77155eb7d96.farce@fresno.local" {
		test_fail "references header does not contain new id";
	}

	if anyof (
		not header :contains "references" "d660a7d1-43c9-47ea-a59a-0b29abc861d2@frop.xi.local",
		not header :contains "references" "500510465.1519.d2ac1c0c-08f7-44fd-97aa-dd711411aacf.frobnitzm@dev.frobnitzm.com",
		not header :contains "references" "717028309.1200.aa78bea5-b5bc-4ab9-a64f-af96521e3af3.frobnitzm@dev.frobnitzm.com",
		not header :contains "references" "1813483923.1202.aa78bea5-b5bc-4ab9-a64f-af96521e3af3.frobnitzm@dev.frobnitzm.com"
		) {
		test_fail "references header does not contain all existing ids";
	}

	if header :contains "references" "hutsefluts" {
		test_fail "references header contains nonsense";
	}
}

/*
 * In-Reply-To
 */

test_result_reset;

test_set "message" text:
From: stephan@example.org
Subject: frop
References: <1234@local.machine.example> <3456@example.net>
 <435444@ttms.example.org> <4223@froop.example.net> <m345444444@message-id.exp>
Message-ID: <432df324@example.org>
To: nico@frop.example.org

Frop
.
;

test "In-Reply-To" {
	vacation "I am not in today!";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :is "in-reply-to" "<432df324@example.org>" {
		test_fail "in-reply-to header set incorrectly";
	}
}


/*
 * Variables
 */

test_result_reset;

test_set "message" text:
From: stephan@example.org
Subject: frop
References: <1234@local.machine.example> <3456@example.net>
 <435444@ttms.example.org> <4223@froop.example.net> <m345444444@message-id.exp>
Message-ID: <432df324@example.org>
To: nico@frop.example.org

Frop
.
;

test "Variables" {
	set "message" "I am not in today!";
	set "subject" "Out of office";
	set "from" "user@example.com";

	vacation :from "${from}" :subject "${subject}" "${message}";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not header :contains "subject" "Out of office" {
		test_fail "subject not set properly";
	}

	if not header :contains "from" "user@example.com" {
		test_fail "from address not set properly";
	}

	if not body :contains :raw "I am not in today!" {
		test_fail "message not set properly";
	}
}

/*
 * NULL Sender
 */

test_result_reset;

test_set "message" text:
From: stephan@example.org
Subject: frop
Message-ID: <432df324@example.org>
To: nico@frop.example.org

Frop
.
;

test_set "envelope.to" "nico@frop.example.org";

test "NULL Sender" {
	set "message" "I am not in today!";
	set "subject" "Out of office";
	set "from" "user@example.com";

	vacation :from "${from}" :subject "${subject}" "${message}";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not envelope :is "from" "" {
		if envelope :matches "from" "*" {}
		test_fail "envelope sender not set properly: ${1}";
	}
}

/*
 * Send from recipient
 */

test_result_reset;

test_set "message" text:
From: stephan@example.org
Subject: frop
Message-ID: <432df324@example.org>
To: nico@frop.example.org

Frop
.
;

test_set "envelope.to" "nico@frop.example.org";

test_config_set "sieve_vacation_send_from_recipient" "yes";
test_config_reload :extension "vacation";

test "Send from recipient" {
	set "message" "I am not in today!";
	set "subject" "Out of office";
	set "from" "user@example.com";

	vacation :from "${from}" :subject "${subject}" "${message}";

	if not test_result_execute {
		test_fail "execution of result failed";
	}

	test_message :smtp 0;

	if not envelope "from" "nico@frop.example.org" {
		test_fail "envelope sender not set properly";
	}
}
