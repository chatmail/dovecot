Solr Full Text Search Indexing
==============================

Solr [http://lucene.apache.org/solr/] is a Lucene indexing server. Dovecot
communicates to it using HTTP/XML queries.

The steps described in this wiki page are tested for Solr 7.5.x. For other
versions, this these steps may need to be adjusted.

Compiling
---------

Dovecot is not compiled with Solr FTS support by default. To enable it, you
need to add the '--with-solr' parameter to your invocation of the 'configure'
script. You will also need to have libexpat installed, including development
headers (typically from a separate development package). Configuration will
fail if '--with-solr' is enabled while libexpat headers cannot be found. Older
versions of Dovecot also required libcurl for Solr support, but recent versions
of Dovecot include a custom HTTP client.

Configuration
-------------

Solr Installation
-----------------

First, the Solr server needs to be installed. Most operating systems will have
packages for this. The latest version can be downloaded and installed from
official website. For example, to install Solr 7.5.0
[https://tecadmin.net/install-apache-solr-on-debian/]:

---%<-------------------------------------------------------------------------
wget http://www-eu.apache.org/dist/lucene/solr/7.5.0/solr-7.5.0.tgz
tar xzf solr-7.5.0.tgz solr-7.5.0/bin/install_solr_service.sh
--strip-components=2
sudo bash ./install_solr_service.sh solr-7.5.0.tgz
---%<-------------------------------------------------------------------------

To use Solr with Dovecot, it needs to configured specifically for use with
Dovecot. To that end, it needs to be running an instance (also called
"collection" or "core") with a schema that provides the fields and semantics
that Dovecot requires. Issue the following command to create a Solr instance
called "dovecot":

---%<-------------------------------------------------------------------------
sudo -u solr solr create -c dovecot
---%<-------------------------------------------------------------------------

When you installed Solr from tarball, the solr command is likely not in the
'PATH', so you will need to specify the full path tho the solr command:

---%<-------------------------------------------------------------------------
sudo -u solr /opt/solr/bin/solr create -c dovecot
---%<-------------------------------------------------------------------------

The location of the files for the newly created instance on the filesystem
varies between operating systems and installation methods. For example, in
Archlinux, the config files are located in '/opt/solr/server/solr/dovecot/conf'
and data files can be found in '/opt/solr/server/solr/dovecot/data'. When
installed from tarball, these directories can be found in
'/var/solr/data/dovecot/'.

Once the instance is created, you can start Solr. The means of starting,
stopping and querying the status of the 'solr' service varies between systems.
For systemd, these commands are as follows:

---%<-------------------------------------------------------------------------
sudo systemctl stop solr
sudo systemctl start solr
sudo systemctl status solr
---%<-------------------------------------------------------------------------

By default, the Solr administation page for the newly created instance is
located at http://localhost:8983/solr/#/~cores/dovecot. It can be used to check
the status of the Solr instance. Configuration errors are often most
conveniently viewed here. Solr also writes log files. For a tarball
installation, these can be found at '/var/solr/logs/'.

Solr Configuration
------------------

There are two primary configuration files that need to be changed to
accommodate the Dovecot FTS needs: these are the instance configuration file
'solrconfig.xml' and the schema file 'schema.xml' used by the instance. These
files are both located in the 'conf' directory of the Solr instance (e.g.,
'/var/solr/data/dovecot/conf/').

schema.xml
----------

An example schema is distributed with Dovecot as 'doc/solr-schema.xml'.
However, this currently works only with older versions of Solr. For Solr v7+,
you can use:

 * The example [attachment:solr-7.x-schema.xml] by Daniel Miller '<dmiller AT
   SPAMFREE amfes DOT com>'.

Installing the schema is normally a matter of replacing Solr's existing
'conf/schema.xml' with the 'schema.xml' for Dovecot. However, for some
configurations, there is only a 'managed-schema' file. In that case, you can
either amend your configuration (see next section) to avoid this or copy
'schema.xml' to that folder, delete 'managed-schema' file and remove or comment
out (be aware not to have recursive comment) the block
'<updateRequestProcessorChain name="add-unknown-fields-to-the-schema">' from
'solrconfig.xml'. Then restart Solr. The 'managed-schema' file will be rebuild
from 'schema.xml'. (See 1
[http://stackoverflow.com/questions/37989084/solr-6-1-where-is-my-collections-managed-schema-file],
2
[http://stackoverflow.com/questions/30673095/using-schema-xml-instead-of-managed-schema-with-solr-5-1-x])

solrconfig.xml
--------------

The default 'solrconfig.xml' contains many definitions that are not needed for
Dovecot and actually cause problems.

There may be other errors on Solr (while looking at
http://localhost:8983/solr):

 * If you see the error /fieldType 'text_general' not found in the schema/ in
   your solr dovecot core, look at solrconfig.xml, and ensure it is not using
   the spellcheck component, or configure it to use your email body or from/to
   fields instead. It may also come from the updateRequestProcessorChain above
   that you would have incorrectly commented out.
 * If solr tells you it can't find /mapping-FoldToASCII.txt/ or
   /mapping-ISOLatin1Accent.txt/, copy those files, that exist in your
   /opt/solr distribution into your core dovecot/conf/ folder.

You may want to check if the file contains something you want to modify. See
Solr wiki [http://wiki.apache.org/solr/SchemaXml] for how to configure it.

Remember to configure Solr to accept and response in XML format. This can be
done by editing 'solrconfig.xml' and adding

---CodeArea-------------------------------------------------------------------
<queryResponseWriter name="xml"    1
                     default="true"    2
                     class="solr.XMLResponseWriter" />    3
---CodeArea-------------------------------------------------------------------

*FIXME:

 * make this a coherent story
 * provide stripped example and example with more features*

Dovecot Plugin
--------------

On Dovecot's side add:

Into 10-mail.conf (note add existing plugins to string)

---%<-------------------------------------------------------------------------
mail_plugins = $mail_plugins fts fts_solr
---%<-------------------------------------------------------------------------

Into 90-plugins.conf

---%<-------------------------------------------------------------------------
plugin {
  fts = solr
  fts_solr = url=http://solr.example.org:8983/solr/
}
---%<-------------------------------------------------------------------------

Fields listed in 'fts_solr' plugin setting are space separated. They can
contain:

 * url=<solr url> : Required base URL for Solr. (remember to add your core name
   if using solr 7+ : "/solr/dovecot/"). The default URL for Solr 7+ is
   http://localhost:8983/solr/dovecot
 * debug : Enable HTTP debugging. Writes to error log.
 * break-imap-search : Use Solr also for indexing TEXT and BODY searches. This
   makes your server non-IMAP-compliant. (This is always enabled in v2.1+, and
   removed since v2.3+ as it's default behaviour)

Important notes:

 * Some mail clients will not submit any search requests for certain fields if
   they index things locally eg. Thunderbird will not send any requests for
   fields such as sender/recipients/subject when Body is not included as this
   data is contained within the local index.

Solr commits & optimization
---------------------------

Solr indexes should be optimized once in a while to make searches faster and to
remove space used by deleted mails. Dovecot never asks Solr to optimize, so you
should do this yourself. Perhaps a cronjob that sends the optimize-command to
Solr every n hours.

With v2.2.3+ Dovecot only does soft commits to the Solr index to improve
performance. You must run a hard commit once in a while or Solr will keep
increasing its transaction log sizes. For example send the commit command to
Solr every few minutes.

---%<-------------------------------------------------------------------------
# Optimize should be run somewhat rarely, e.g. once a day
curl http://<hostname/ip>:<port|default 8983>/solr/dovecot/update?optimize=true
# Commit should be run pretty often, e.g. every minute
curl http://<hostname/ip>:<port|default 8983>/solr/dovecot/update?commit=true
---%<-------------------------------------------------------------------------

You may not need those if you are using a recent Solr (7+) or <SolrCloud.txt>.
The default configuration of Solr is to auto-commit every once in a while
(~15sec) so commit is not necessary. Also, the default /
<TieredMergePolicy.txt>/ in Solr will automatically purge removed documents
later, so optimize is not necessary.

Re-index mailbox
----------------

If you require to force dovecot to reindex a whole mailbox you can run the
command shown, this will only take action when a search is done and will apply
to the whole mailbox.

---%<-------------------------------------------------------------------------
doveadm fts rescan -u <username>
---%<-------------------------------------------------------------------------

If you want to index a single mailbox/all mailboxes you can run the command
shown, this will happen immediately and will block until the action is
completed.

---%<-------------------------------------------------------------------------
doveadm index [-u <user>|-A] [-S <socket_path>] [-q] [-n <max recent>] <mailbox
mask>
---%<-------------------------------------------------------------------------

Sorting by relevancy
--------------------

Solr/Lucene supports returning a relevancy score for search results. If you
want to sort the search results by the score, use Dovecot's non-standard
X-SCORE sort key:

---%<-------------------------------------------------------------------------
1 SORT (X-SCORE) UTF-8 <search parameters>
---%<-------------------------------------------------------------------------

Indexes
-------

Dovecot creates the following fields:

 * id: Unique ID consisting of uid/uidv/user/box.
    * Note that your user names really shouldn't contain '/' character.
 * uid: Message's IMAP UID.
 * uidv: Mailbox's UIDVALIDITY. This changes if mailbox gets recreated.
 * box: Mailbox name
 * user: User name who owns the mailbox, or empty for public namespaces
 * hdr: Indexed message headers
 * body: Indexed message body
 * any: "Copy field" from hdr and body, i.e. searching based on this will
   search from both headers and bodies.

Lucene does duplicate suppression based on the "id" field, so even if Dovecot
sends the same message multiple times to Solr it gets indexed only once. This
might happen currently if multiple searches are started at the same time.

You might want to build a cronjob to go through the Lucene indexes once in a
while to delete indexed messages (or entire mailboxes) that no longer exist on
the filesystem. It shouldn't normally find any such messages though.

Testing
-------

---%<-------------------------------------------------------------------------
# telnet localhost imap
* OK [CAPABILITY IMAP4rev1 LITERAL+ SASL-IR LOGIN-REFERRALS ID ENABLE IDLE SORT
SORT=DISPLAY THREAD=REFERENCES THREAD=REFS MULTIAPPEND UNSELECT CHILDREN
NAMESPACE UIDPLUS LIST-EXTENDED I18NLEVEL=1 ESEARCH ESORT SEARCHRES WITHIN
CONTEXT=SEARCH LIST-STATUS STARTTLS AUTH=PLAIN AUTH=LOGIN] I am ready.
1 login username password
2 select Inbox
3 SEARCH text "test"
---%<-------------------------------------------------------------------------

Sharding
--------

If you have more users than fit into a single Solr box, you can split users off
to different servers. A couple of different ways you could do it are:

 * Have some HTTP proxy redirecting the connections based on the URL
 * Configure Dovecot's userdb lookup to return a different host for 'fts_solr'
   setting using <extra fields> [UserDatabase.ExtraFields.txt].
    * LDAP: 'user_attrs = ...,
      solrHost=fts_solr=url=http://%$:8983/solr/dovecot/'
    * MySQL: 'user_query = SELECT concat('url=http://', solr_host,
      ':8983/solr/dovecot/') AS fts_solr, ...'

You can also use SolrCloud
[https://lucene.apache.org/solr/guide/7_6/solrcloud.html], the clustered
version of Solr, that allows you to scale up, and adds failover / high
availability to your FTS system. Dovecot-solr works fine with a <SolrCloud.txt>
cluster as long as the solr schema is the right one.

External Tutorials
------------------

External sites with tutorials on using Solr under Dovecot

 * Installing Apache Solr with Dovecot for fulltext search results (ATmail
   support guide)
   [https://help.atmail.com/hc/en-us/articles/201566404-Installing-Apache-Solr-with-Dovecot-for-fulltext-search-results]
 * Linux: http://things.m31.ch/?p=379
 * FreeBSD: http://mor-pah.net/2016/08/15/dovecot-2-2-with-solr-6-or-5/
 * Substring searches with ngrams:
   https://www.dovecot.org/list/dovecot/2011-May/059338.html

Tips
----

Some additional things which might help you configuring Solr search:

 * If you are using Tomcat: Set 'maxHttpHeaderSize="65536"' (connector
   definition for port 8080 in '/etc/tomcat7/server.xml') to accept long search
   query strings (iPhones tend to send multi-kilobyte-sized queries)
 * Set 'df' to 'hdr' in '/etc/solr/conf/solrconfig.xml' ('/select' request
   handler) to avoid strange 'undefined field text' errors.
 * Please keep in mind that you will have to change the Solr URL to include the
   core name (ie:'dovecot': 'http://localhost:8939/solr/dovecot').

(This file was created from the wiki on 2019-02-05 04:42)
